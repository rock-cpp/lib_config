FIND_PACKAGE(PythonInterp REQUIRED)
FIND_PACKAGE(PythonLibs REQUIRED)
        
if (UNIX AND NOT APPLE)
    if (PYTHON_VERSION_MAJOR EQUAL 3)
        FIND_PACKAGE(Boost COMPONENTS python${PYTHON_VERSION_MAJOR})
    else()
        FIND_PACKAGE(Boost COMPONENTS python)
    endif()
else()    
    if (PYTHON_VERSION_MAJOR EQUAL 3)
        FIND_PACKAGE(Boost COMPONENTS python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
    else()
        FIND_PACKAGE(Boost COMPONENTS python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
    endif()
endif()

set(PYTHON_INSTALL_PATH ${CMAKE_INSTALL_PREFIX}/lib/python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}/site-packages)

message(STATUS "PYTHON_VERSION_MAJOR.PYTHON_VERSION_MINOR = ${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}")
message(STATUS "PYTHON_LIBRARIES = ${PYTHON_LIBRARIES}")
message(STATUS "PYTHON_EXECUTABLE = ${PYTHON_EXECUTABLE}")
message(STATUS "PYTHON_INCLUDE_DIRS = ${PYTHON_INCLUDE_DIRS}")
message(STATUS "Boost_LIBRARIES = ${Boost_LIBRARIES}")
message(STATUS "PYTHON_INSTALL_PATH = ${PYTHON_INSTALL_PATH}")


INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS} ${PYTHON_INCLUDE_DIRS})

PYTHON_ADD_MODULE(bundle bundle.cpp)
set_target_properties(bundle PROPERTIES PREFIX "")
target_link_libraries(bundle
    ${Boost_LIBRARIES}
    lib_config
    ${PYTHON_LIBRARIES}
)

add_custom_target(rockpy
    COMMAND if(NOT EXISTS ${PYTHON_INSTALL_PATH}/rock/__init__.py)
        file(WRITE ${PYTHON_INSTALL_PATH}/rock/__init__.py)
    endif()
)

install(TARGETS bundle
        DESTINATION ${PYTHON_INSTALL_PATH}/rock)
install(FILES __init__.py
        DESTINATION ${PYTHON_INSTALL_PATH}/rock)

